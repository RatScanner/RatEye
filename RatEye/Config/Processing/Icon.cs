namespace RatEye
{
	public partial class Config
	{
		public partial class Processing
		{
			/// <summary>
			/// The Icon class contains parameters, used by the icon processing module.
			/// </summary>
			public class Icon
			{
				/// <summary>
				/// Use the icon cache, generated by the game, for template matching
				/// </summary>
				public bool UseDynamicIcons;

				/// <summary>
				/// Create a new icon config instance based on the state of <see cref="Config.GlobalConfig"/>
				/// </summary>
				/// <param name="basedOnDefault">
				/// Base the state on the default config rather then <see cref="Config.GlobalConfig"/>
				/// </param>
				public Icon(bool basedOnDefault = false)
				{
					if (basedOnDefault)
					{
						SetDefaults();
						return;
					}

					var globalConfig = GlobalConfig.ProcessingConfig.IconConfig;

					UseDynamicIcons = globalConfig.UseDynamicIcons;
				}

				private void SetDefaults()
				{
					UseDynamicIcons = false;
				}
			}
		}
	}
}
